diff --git a/bot/ui/keyboards.py b/bot/ui/keyboards.py
index 782b1f2..f282a88 100644
--- a/bot/ui/keyboards.py
+++ b/bot/ui/keyboards.py
@@ -1,73 +1,86 @@
 from __future__ import annotations
 
 from aiogram.types import (
-    ReplyKeyboardMarkup,
-    KeyboardButton,
-    InlineKeyboardMarkup,
     InlineKeyboardButton,
+    InlineKeyboardMarkup,
+    KeyboardButton,
+    ReplyKeyboardMarkup,
 )
-from typing import List
-
-
-# Design System Button Labels - SVG –∏–∫–æ–Ω–∫–∏ + emoji fallback
-# SVG icons available in ui/icons/svg/: palette, drop, cart, info, list, settings
-BTN_PALETTE = "üé® –¢–æ–Ω&–°–∏—è–Ω–∏–µ"          # SVG: palette.svg | Primary color theme
-BTN_SKINCARE = "üíß –ü–æ—Ä—Ç—Ä–µ—Ç –ª–∏—Ü–∞"      # SVG: drop.svg | Water/blue theme
-BTN_ABOUT = "‚ÑπÔ∏è –û –±–æ—Ç–µ"               # SVG: info.svg | Info theme
-BTN_PICK = "üõí –ö–æ—Ä–∑–∏–Ω–∞"               # SVG: cart.svg | Shopping theme
-BTN_SETTINGS = "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏"          # SVG: settings.svg | Settings theme
-BTN_REPORT = "üìÑ –ú–æ–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏"     # SVG: list.svg | Document theme
-BTN_BACK = "‚¨ÖÔ∏è –ù–∞–∑–∞–¥"                 # Navigation theme
-BTN_HOME = "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"          # Home theme
-
-# Additional Design System Buttons
-BTN_START_TEST = "üöÄ –ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç"
-BTN_VIEW_RESULTS = "üìä –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã"
-BTN_ADD_TO_CART = "‚ûï –í –∫–æ—Ä–∑–∏–Ω—É"
-BTN_SHOW_ALL = "üìã –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ"
-BTN_GET_REPORT = "üìÑ –ü–æ–ª—É—á–∏—Ç—å –æ—Ç—á–µ—Ç"
-BTN_CONTACT_SUPPORT = "üí¨ –°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π"
-
-
-def main_menu() -> ReplyKeyboardMarkup:
-    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞"""
+from typing import Optional
+
+from services.cart_store import get_cart_store
+
+BTN_PALETTE = "üé® –¢–æ–Ω & —Å–∏—è–Ω–∏–µ"
+BTN_SKINCARE = "üíß –ü–æ—Ä—Ç—Ä–µ—Ç –∫–æ–∂–∏"
+BTN_CART = "üõí –ö–æ—Ä–∑–∏–Ω–∞"
+BTN_ABOUT = "‚ÑπÔ∏è –û –±–æ—Ç–µ"
+BTN_SETTINGS = "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏"
+BTN_REPORT = "üìÑ –ú–æ–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏"
+BTN_BACK = "‚¨Ö –ù–∞–∑–∞–¥"
+BTN_HOME = "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
+
+BTN_CONFIRM_YES = "‚úÖ –î–∞"
+BTN_CONFIRM_NO = "‚úñÔ∏è –ù–µ—Ç"
+BTN_RETRY = "üîÅ –ü–æ–≤—Ç–æ—Ä–∏—Ç—å"
+
+_store = get_cart_store()
+
+
+def _cart_caption(count: int) -> str:
+    return BTN_CART if count <= 0 else f"{BTN_CART} ({count})"
+
+
+def _resolve_count(cart_count: Optional[int], user_id: Optional[int]) -> int:
+    if cart_count is not None:
+        return max(cart_count, 0)
+    if not user_id:
+        return 0
+    try:
+        return _store.get_cart_count(int(user_id))
+    except Exception:  # pragma: no cover - diagnostics only
+        return 0
+
+
+def is_cart_button_text(text: Optional[str]) -> bool:
+    return bool(text and text.startswith(BTN_CART))
+
+
+def main_menu(cart_count: Optional[int] = None, *, user_id: Optional[int] = None) -> ReplyKeyboardMarkup:
+    count = _resolve_count(cart_count, user_id)
     return ReplyKeyboardMarkup(
         keyboard=[
             [KeyboardButton(text=BTN_PALETTE)],
             [KeyboardButton(text=BTN_SKINCARE)],
-            [KeyboardButton(text=BTN_PICK)],  # –ö–æ—Ä–∑–∏–Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–æ–π
+            [KeyboardButton(text=_cart_caption(count))],
             [KeyboardButton(text=BTN_ABOUT), KeyboardButton(text=BTN_REPORT)],
             [KeyboardButton(text=BTN_SETTINGS)],
         ],
         resize_keyboard=True,
-        input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ‚Ä¶",
+        input_field_placeholder="–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?",
     )
 
 
-def main_menu_inline() -> InlineKeyboardMarkup:
-    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞ (inline –≤–µ—Ä—Å–∏—è –¥–ª—è edit_text)"""
+def main_menu_inline(cart_count: Optional[int] = None, *, user_id: Optional[int] = None) -> InlineKeyboardMarkup:
+    count = _resolve_count(cart_count, user_id)
     return InlineKeyboardMarkup(
         inline_keyboard=[
             [InlineKeyboardButton(text=BTN_PALETTE, callback_data="start_palette")],
             [InlineKeyboardButton(text=BTN_SKINCARE, callback_data="start_skincare")],
-            [InlineKeyboardButton(text=BTN_PICK, callback_data="show_cart")],  # –ö–æ—Ä–∑–∏–Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–æ–π
-            [InlineKeyboardButton(text=BTN_ABOUT, callback_data="about"), 
-             InlineKeyboardButton(text=BTN_REPORT, callback_data="show_report")],
+            [InlineKeyboardButton(text=_cart_caption(count), callback_data="cart:open")],
+            [InlineKeyboardButton(text=BTN_ABOUT, callback_data="about"), InlineKeyboardButton(text=BTN_REPORT, callback_data="show_report")],
             [InlineKeyboardButton(text=BTN_SETTINGS, callback_data="settings")],
         ]
     )
 
 
 def back_button() -> ReplyKeyboardMarkup:
-    """–ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞"""
     return ReplyKeyboardMarkup(
         keyboard=[[KeyboardButton(text=BTN_BACK)]],
         resize_keyboard=True,
     )
 
 
-def confirm_buttons(yes_text: str = "‚úÖ –î–∞", no_text: str = "‚ùå –ù–µ—Ç") -> InlineKeyboardMarkup:
-    """–ö–Ω–æ–ø–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è"""
+def confirm_buttons(yes_text: str = BTN_CONFIRM_YES, no_text: str = BTN_CONFIRM_NO) -> InlineKeyboardMarkup:
     return InlineKeyboardMarkup(
         inline_keyboard=[
             [InlineKeyboardButton(text=yes_text, callback_data="confirm:yes")],
@@ -77,59 +90,50 @@ def confirm_buttons(yes_text: str = "‚úÖ –î–∞", no_text: str = "‚ùå –ù–µ—Ç") ->
 
 
 def navigation_buttons(
-    prev_callback: str = None, next_callback: str = None, back_callback: str = None,
-    include_home: bool = True
+    prev_callback: Optional[str] = None,
+    next_callback: Optional[str] = None,
+    back_callback: Optional[str] = None,
+    include_home: bool = True,
 ) -> InlineKeyboardMarkup:
-    """–ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏"""
-    buttons: List[List[InlineKeyboardButton]] = []
-    row: List[InlineKeyboardButton] = []
-
-    if back_callback:
-        row.append(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=back_callback))
-
+    rows = []
+    nav_row = []
     if prev_callback:
-        row.append(InlineKeyboardButton(text="‚óÄÔ∏è –ü—Ä–µ–¥—ã–¥—É—â–∏–π", callback_data=prev_callback))
-
+        nav_row.append(InlineKeyboardButton(text="‚¨Ö –ù–∞–∑–∞–¥", callback_data=prev_callback))
     if next_callback:
-        row.append(InlineKeyboardButton(text="–°–ª–µ–¥—É—é—â–∏–π ‚ñ∂Ô∏è", callback_data=next_callback))
-
-    if row:
-        buttons.append(row)
-    
-    # Add universal home button for emergency exit
+        nav_row.append(InlineKeyboardButton(text="–í–ø–µ—Ä—ë–¥ ‚û°", callback_data=next_callback))
+    if back_callback:
+        nav_row.insert(0, InlineKeyboardButton(text=BTN_BACK, callback_data=back_callback))
+    if nav_row:
+        rows.append(nav_row)
     if include_home:
-        buttons.append([InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="universal:home")])
-
-    return InlineKeyboardMarkup(inline_keyboard=buttons) if buttons else None
+        rows.append([InlineKeyboardButton(text=BTN_HOME, callback_data="universal:home")])
+    return InlineKeyboardMarkup(inline_keyboard=rows)
 
 
 def loading_message() -> str:
-    """–°–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ"""
-    return "‚è≥ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –≤–∞—à –∑–∞–ø—Ä–æ—Å..."
+    return "–ü–æ–¥–æ–∂–¥–∏—Ç–µ, –≥–æ—Ç–æ–≤–∏–º –æ—Ç–≤–µ—Ç..."
 
 
 def error_message() -> str:
-    """–°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ"""
-    return "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
+    return "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑."
 
 
 def emergency_keyboard() -> InlineKeyboardMarkup:
-    """Emergency keyboard for error recovery"""
     return InlineKeyboardMarkup(
         inline_keyboard=[
-            [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="universal:home")],
-            [InlineKeyboardButton(text="üîÑ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞", callback_data="universal:retry")]
+            [InlineKeyboardButton(text=BTN_HOME, callback_data="universal:home")],
+            [InlineKeyboardButton(text=BTN_RETRY, callback_data="universal:retry")],
         ]
     )
 
 
 def add_home_button(keyboard: InlineKeyboardMarkup) -> InlineKeyboardMarkup:
-    """Add home button to any existing keyboard"""
     if not keyboard or not keyboard.inline_keyboard:
         return emergency_keyboard()
-    
-    # Create new keyboard with existing buttons plus home button
-    new_buttons = list(keyboard.inline_keyboard)
-    new_buttons.append([InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="universal:home")])
-    
-    return InlineKeyboardMarkup(inline_keyboard=new_buttons)
+    new_rows = list(keyboard.inline_keyboard)
+    new_rows.append([InlineKeyboardButton(text=BTN_HOME, callback_data="universal:home")])
+    return InlineKeyboardMarkup(inline_keyboard=new_rows)
+
+
+# Backwards compatibility aliases
+BTN_PICK = BTN_CART
diff --git a/i18n/ru.py b/i18n/ru.py
index 115b98d..77f3e5e 100644
--- a/i18n/ru.py
+++ b/i18n/ru.py
@@ -42,40 +42,94 @@ BTN_SPF = "–°–æ–ª–Ω—Ü–µ–∑–∞—â–∏—Ç–∞"
 BTN_REMOVER = "–°–Ω—è—Ç–∏–µ –º–∞–∫–∏—è–∂–∞"
 
 # Cart messages
-MSG_ADDED = "–î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∫–æ—Ä–∑–∏–Ω—É: {brand} {name} ({variant})"
+MSG_ADDED = "–î–æ–±–∞–≤–∏–ª–∏ –≤ –∫–æ—Ä–∑–∏–Ω—É"
 
 # Buttons
 BTN_CHOOSE_VARIANT = "–í—ã–±—Ä–∞—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç"
-BTN_ADD_TO_CART = "–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É"
-BTN_IN_CART = "‚úì –í –∫–æ—Ä–∑–∏–Ω–µ"
+BTN_ADD_TO_CART = "–í –∫–æ—Ä–∑–∏–Ω—É"
+BTN_IN_CART = "–í –∫–æ—Ä–∑–∏–Ω–µ"
+
+CART_ITEM_LINE = "{index}. {name}{variant}\n   {price} √ó {qty} = {total}"
+CART_SUBTOTAL_LABEL = "–ò—Ç–æ–≥–æ: {qty} —à—Ç ¬∑ {total}"
+BTN_CART_DECREASE = "‚ûñ"
+BTN_CART_INCREASE = "‚ûï"
+BTN_CART_DELETE = "üóë –£–¥–∞–ª–∏—Ç—å"
+BTN_CART_CLEAR = "üßπ –û—á–∏—Å—Ç–∏—Ç—å"
+BTN_CART_CONTINUE = "üîé –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–¥–±–æ—Ä"
+BTN_CART_CHECKOUT = "üßæ –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ"
+MSG_CART_ITEM_ADDED = "–î–æ–±–∞–≤–∏–ª–∏ –≤ –∫–æ—Ä–∑–∏–Ω—É"
+MSG_CART_ITEM_REMOVED = "–¢–æ–≤–∞—Ä —É–¥–∞–ª—ë–Ω"
+MSG_CART_EMPTY_AFTER_CLEAR = "–ö–æ—Ä–∑–∏–Ω–∞ –æ—á–∏—â–µ–Ω–∞"
+MSG_CART_UPDATED = "–ö–æ—Ä–∑–∏–Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞"
+MSG_INVALID_VARIANT = "–¢–∞–∫–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
+MSG_UNKNOWN_PRODUCT = "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ç–æ–≤–∞—Ä"
+MSG_CART_READY_FOR_CHECKOUT = "–û—Ñ–æ—Ä–º–∏–º –∑–∞–∫–∞–∑. –ú–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –∏ –ø–æ–º–æ–∂–µ—Ç –∑–∞–≤–µ—Ä—à–∏—Ç—å –ø–æ–∫—É–ø–∫—É."
 
 # Cart v2 texts
-CART_TITLE = "üõí –ö–æ—Ä–∑–∏–Ω–∞"
-CART_EMPTY = "–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞. –ù–∞–∂–º–∏—Ç–µ ¬´–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–¥–±–æ—Ä¬ª, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä—ã."
+CART_TITLE = "üõí –í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞"
+CART_EMPTY = "–ü–æ–∫–∞ –ø—É—Å—Ç–æ. –ù–∞–∂–º–∏—Ç–µ ¬´–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–¥–±–æ—Ä¬ª, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å —Ç–æ–≤–∞—Ä—ã."
 CART_ITEM_FMT = "{name}  {price} √ó {qty} = {total}"
 CART_TOTAL = "–ò—Ç–æ–≥–æ: {total}"
-BTN_ADD = "–î–æ–±–∞–≤–∏—Ç—å ‚ñ∏"
+BTN_ADD = "–î–æ–±–∞–≤–∏—Ç—å"
 BTN_MORE = "–ï—â—ë"
 BTN_DETAILS = "–ü–æ–¥—Ä–æ–±–Ω–µ–µ"
-BTN_INC = "Ôºã"
-BTN_DEC = "Ôºç"
-BTN_DEL = "–£–¥–∞–ª–∏—Ç—å"
-BTN_CLEAR = "–û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É"
+BTN_INC = "‚ûï"
+BTN_DEC = "‚ûñ"
+BTN_DEL = "üóë –£–¥–∞–ª–∏—Ç—å"
+BTN_CLEAR = "üßπ –û—á–∏—Å—Ç–∏—Ç—å"
 BTN_BACK_RECO = "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–¥–±–æ—Ä"
-BTN_CHECKOUT = "–û—Ñ–æ—Ä–º–∏—Ç—å"
+BTN_CHECKOUT = "–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ"
 CHECKOUT_TITLE = "–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ"
 CHECKOUT_LINKS_READY = "–°–æ–±—Ä–∞–ª —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤–∞—à–∏ —Ç–æ–≤–∞—Ä—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–ø–∏—Å–æ–∫ –Ω–∏–∂–µ."
-MSG_UNAVAILABLE = "–ü–æ–∑–∏—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞. –í—ã–±–µ—Ä–∏—Ç–µ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—É."
+MSG_UNAVAILABLE = "–≠—Ç–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏"
 MSG_ADDED = "–î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∫–æ—Ä–∑–∏–Ω—É"
-BTN_BACK = "‚óÄÔ∏é –ù–∞–∑–∞–¥"
-BTN_BACK_CAT = "–í –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"
-BTN_PREV = "‚óÄÔ∏é"
-BTN_NEXT = "‚ñ∂Ô∏é"
+BTN_BACK = "–ù–∞–∑–∞–¥"
+BTN_BACK_CAT = "–ö –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º"
+BTN_PREV = "‚¨Ö"
+BTN_NEXT = "‚û°"
 
 # Badges and sources
 BADGE_OOS = "–ù–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏"
 BTN_SHOW_ALTS = "–ü–æ–∫–∞–∑–∞—Ç—å –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã"
 SRC_GOLDAPPLE = "–ó–æ–ª–æ—Ç–æ–µ –Ø–±–ª–æ–∫–æ"
-SRC_RU_OFFICIAL = "–û—Ñ–∏—Ü–∏–∞–ª. –º–∞–≥–∞–∑–∏–Ω"
+SRC_RU_OFFICIAL = "–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω"
+SRC_RU_MP = "–ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å"
+SRC_INTL = "–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω"
+
+# --- Cart UX overrides (clean texts) ---
+CART_TITLE = "üõí –í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞"
+CART_EMPTY = "–ü–æ–∫–∞ –ø—É—Å—Ç–æ. –ù–∞–∂–º–∏—Ç–µ ¬´–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–¥–±–æ—Ä¬ª, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å —Ç–æ–≤–∞—Ä—ã."
+CART_ITEM_LINE = "{index}. {name}{variant}\n   {price} √ó {qty} = {total}"
+CART_SUBTOTAL_LABEL = "–ò—Ç–æ–≥–æ: {qty} —à—Ç ¬∑ {total}"
+BTN_CART_DECREASE = "‚ûñ"
+BTN_CART_INCREASE = "‚ûï"
+BTN_CART_DELETE = "üóë –£–¥–∞–ª–∏—Ç—å"
+BTN_CART_CLEAR = "üßπ –û—á–∏—Å—Ç–∏—Ç—å"
+BTN_CART_CONTINUE = "üîé –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–¥–±–æ—Ä"
+BTN_CART_CHECKOUT = "üßæ –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ"
+BTN_ADD = "–î–æ–±–∞–≤–∏—Ç—å"
+BTN_MORE = "–ï—â—ë"
+BTN_DETAILS = "–ü–æ–¥—Ä–æ–±–Ω–µ–µ"
+BTN_ADD_TO_CART = "–í –∫–æ—Ä–∑–∏–Ω—É"
+BTN_IN_CART = "–í –∫–æ—Ä–∑–∏–Ω–µ"
+BTN_CLEAR = "üßπ –û—á–∏—Å—Ç–∏—Ç—å"
+BTN_CHECKOUT = "–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ"
+BTN_BACK_RECO = "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–¥–±–æ—Ä"
+BTN_BACK = "–ù–∞–∑–∞–¥"
+BTN_BACK_CAT = "–ö –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º"
+BTN_PREV = "‚¨Ö"
+BTN_NEXT = "‚û°"
+BADGE_OOS = "–ù–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏"
+BTN_SHOW_ALTS = "–ü–æ–∫–∞–∑–∞—Ç—å –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã"
+SRC_GOLDAPPLE = "–ó–æ–ª–æ—Ç–æ–µ –Ø–±–ª–æ–∫–æ"
+SRC_RU_OFFICIAL = "–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω"
 SRC_RU_MP = "–ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å"
-SRC_INTL = "–ó–∞—Ä—É–±–µ–∂–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω"
+SRC_INTL = "–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω"
+MSG_CART_ITEM_ADDED = "–î–æ–±–∞–≤–∏–ª–∏ –≤ –∫–æ—Ä–∑–∏–Ω—É"
+MSG_CART_ITEM_REMOVED = "–¢–æ–≤–∞—Ä —É–¥–∞–ª—ë–Ω"
+MSG_CART_EMPTY_AFTER_CLEAR = "–ö–æ—Ä–∑–∏–Ω–∞ –æ—á–∏—â–µ–Ω–∞"
+MSG_CART_UPDATED = "–ö–æ—Ä–∑–∏–Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞"
+MSG_INVALID_VARIANT = "–¢–∞–∫–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
+MSG_UNKNOWN_PRODUCT = "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ç–æ–≤–∞—Ä"
+MSG_CART_READY_FOR_CHECKOUT = "–û—Ñ–æ—Ä–º–∏–º –∑–∞–∫–∞–∑. –ú—ã –ø–æ–º–æ–∂–µ–º –∑–∞–≤–µ—Ä—à–∏—Ç—å –ø–æ–∫—É–ø–∫—É."
+MSG_UNAVAILABLE = "–≠—Ç–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏"
