#!/usr/bin/env python
"""–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—Ç–∞–ª–æ–≥–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤"""

from engine.catalog import load_catalog
from collections import Counter


def main():
    try:
        products = load_catalog("assets/fixed_catalog.yaml")
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ {len(products)} –ø—Ä–æ–¥—É–∫—Ç–æ–≤\n")

        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –±—Ä–µ–Ω–¥–∞–º
        brands = Counter(p.brand for p in products)
        print(f"üìä –í—Å–µ–≥–æ –±—Ä–µ–Ω–¥–æ–≤: {len(brands)}")
        print("–¢–æ–ø-5 –±—Ä–µ–Ω–¥–æ–≤ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –ø—Ä–æ–¥—É–∫—Ç–æ–≤:")
        for brand, count in brands.most_common(5):
            print(f"  ‚Ä¢ {brand}: {count} –ø—Ä–æ–¥—É–∫—Ç–æ–≤")

        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
        categories = Counter(p.category for p in products)
        print(f"\nüì¶ –í—Å–µ–≥–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {len(categories)}")
        print("–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º:")
        for category, count in sorted(categories.items()):
            print(f"  ‚Ä¢ {category}: {count} –ø—Ä–æ–¥—É–∫—Ç–æ–≤")

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª–µ–π
        with_links = sum(1 for p in products if p.link)
        with_actives = sum(1 for p in products if p.actives)
        with_price = sum(1 for p in products if p.price)

        print("\n‚ú® –ö–∞—á–µ—Å—Ç–≤–æ –¥–∞–Ω–Ω—ã—Ö:")
        print(f"  ‚Ä¢ –ü—Ä–æ–¥—É–∫—Ç—ã —Å —Å—Å—ã–ª–∫–∞–º–∏: {with_links}/{len(products)}")
        print(f"  ‚Ä¢ –ü—Ä–æ–¥—É–∫—Ç—ã —Å –∞–∫—Ç–∏–≤–∞–º–∏: {with_actives}/{len(products)}")
        print(f"  ‚Ä¢ –ü—Ä–æ–¥—É–∫—Ç—ã —Å —Ü–µ–Ω–∞–º–∏: {with_price}/{len(products)}")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ç–∞–ª–æ–≥–∞: {e}")
        import traceback

        traceback.print_exc()


if __name__ == "__main__":
    main()
