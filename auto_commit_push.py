#!/usr/bin/env python3
"""
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∫–æ–º–º–∏—Ç –∏ –ø—É—à –∏–∑–º–µ–Ω–µ–Ω–∏–π
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python auto_commit_push.py "commit message"
"""

import subprocess
import sys
import os
from datetime import datetime

def run_command(cmd, description=""):
    """–í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –∏ –≤–µ—Ä–Ω—É—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç"""
    try:
        print(f"üîß {description}")
        result = subprocess.run(cmd, shell=True, capture_output=True, text=True, cwd=os.getcwd())

        if result.returncode == 0:
            print(f"‚úÖ {description} - —É—Å–ø–µ—à–Ω–æ")
            if result.stdout.strip():
                print(f"   üìÑ {result.stdout.strip()}")
            return True
        else:
            print(f"‚ùå {description} - –æ—à–∏–±–∫–∞:")
            if result.stderr.strip():
                print(f"   üö® {result.stderr.strip()}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã: {e}")
        return False

def auto_commit_push(commit_message):
    """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∫–æ–º–º–∏—Ç –∏ –ø—É—à –∏–∑–º–µ–Ω–µ–Ω–∏–π"""

    print("üöÄ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ô –ö–û–ú–ú–ò–¢ –ò –ü–£–®")
    print("=" * 50)
    print(f"üìù –°–æ–æ–±—â–µ–Ω–∏–µ: {commit_message}")
    print(f"üïê –í—Ä–µ–º—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print()

    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
    if not run_command("git status --porcelain", "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è"):
        print("‚ö†Ô∏è  –ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∫–æ–º–º–∏—Ç–∞")
        return True

    # 2. –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
    if not run_command("git add .", "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –≤ –∏–Ω–¥–µ–∫—Å"):
        return False

    # 3. –°–æ–∑–¥–∞–µ–º –∫–æ–º–º–∏—Ç
    commit_cmd = f'git commit -m "{commit_message}"'
    if not run_command(commit_cmd, "–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞"):
        return False

    # 4. –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –≤–µ—Ç–∫—É
    branch_result = subprocess.run("git branch --show-current", shell=True, capture_output=True, text=True)
    if branch_result.returncode != 0:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç–µ–∫—É—â—É—é –≤–µ—Ç–∫—É")
        return False

    current_branch = branch_result.stdout.strip()

    # 5. –ü—É—à–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
    push_cmd = f"git push origin {current_branch}"
    if not run_command(push_cmd, f"–û—Ç–ø—Ä–∞–≤–∫–∞ –≤ –≤–µ—Ç–∫—É {current_branch}"):
        return False

    # 6. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    print()
    print("üéâ –£–°–ü–ï–®–ù–û!")
    print("=" * 30)
    print("‚úÖ –í—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–∫–æ–º–º–∏—á–µ–Ω—ã –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π")
    print(f"üîó –í–µ—Ç–∫–∞: {current_branch}")
    print(f"üìã –°–æ–æ–±—â–µ–Ω–∏–µ: {commit_message}")
    print(f"üîó –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: https://github.com/MarkGerber1/skin-advisor")

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –∫–æ–º–º–∏—Ç
    last_commit = subprocess.run("git log --oneline -1", shell=True, capture_output=True, text=True)
    if last_commit.returncode == 0:
        print(f"üìä –ü–æ—Å–ª–µ–¥–Ω–∏–π –∫–æ–º–º–∏—Ç: {last_commit.stdout.strip()}")

    return True

if __name__ == "__main__":
    if len(sys.argv) < 2:
        print("‚ùå –û—à–∏–±–∫–∞: –£–∫–∞–∂–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞")
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python auto_commit_push.py \"commit message\"")
        sys.exit(1)

    commit_message = " ".join(sys.argv[1:])
    success = auto_commit_push(commit_message)

    if not success:
        print()
        print("üö® –ü–†–û–ë–õ–ï–ú–ê!")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É:")
        print("  git status")
        print("  git log --oneline -5")
        sys.exit(1)

    print()
    print("‚ú® –ì–û–¢–û–í–û! –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏.")



