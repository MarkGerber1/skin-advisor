# Skin Advisor Bot - Startup Script
# –ê–≤—Ç–æ—Ä: –õ–∞—Ä–∏–Ω –†.–†. (@MagnatMark)

Write-Host "üß¥ Skin Advisor Bot - –ó–∞–ø—É—Å–∫..." -ForegroundColor Green

# –ü—É—Ç–∏ –∫ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–º—É –æ–∫—Ä—É–∂–µ–Ω–∏—é
$venvPath = ".venv\Scripts\python.exe"
$altVenvPath = "venv\Scripts\python.exe"

# –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ .env (–µ—Å–ª–∏ –µ—Å—Ç—å)
function Import-DotEnv {
    param([string]$path = ".env")
    if (Test-Path $path) {
        Get-Content $path | ForEach-Object {
            if ($_ -match '^(\s*#|\s*$)') { return }
            if ($_ -match '^(?<k>[^=\s]+)\s*=\s*(?<v>.*)$') {
                $k = $Matches['k']
                $v = $Matches['v'].Trim().Trim('"').Trim("'")
                [System.Environment]::SetEnvironmentVariable($k, $v, 'Process')
            }
        }
        Write-Host "‚úì –ó–∞–≥—Ä—É–∂–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env" -ForegroundColor Green
    }
}

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã Python
Write-Host "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤..." -ForegroundColor Yellow
Get-Process python -ErrorAction SilentlyContinue | Stop-Process -Force

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º Python
$pythonPath = $null
if (Test-Path $venvPath) {
    $pythonPath = $venvPath
    Write-Host "‚úì –ù–∞–π–¥–µ–Ω–æ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ: .venv" -ForegroundColor Green
} elseif (Test-Path $altVenvPath) {
    $pythonPath = $altVenvPath
    Write-Host "‚úì –ù–∞–π–¥–µ–Ω–æ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ: venv" -ForegroundColor Green
} else {
    # –ü—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å .venv –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
    Write-Host "‚öô –°–æ–∑–¥–∞—é –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ (.venv)..." -ForegroundColor Yellow
    try {
        python -m venv .venv
        if (Test-Path $venvPath) {
            $pythonPath = $venvPath
            & $pythonPath -m pip install -U pip
            & $pythonPath -m pip install -r requirements.txt
            Write-Host "‚úì .venv —Å–æ–∑–¥–∞–Ω–æ –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã" -ForegroundColor Green
        } else {
            Write-Host "‚ö† –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å .venv ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π Python" -ForegroundColor Yellow
            $pythonPath = "python"
        }
    } catch {
        Write-Host "‚ö† –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è .venv ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π Python" -ForegroundColor Yellow
        $pythonPath = "python"
    }
}

# –ó–∞–≥—Ä—É–∂–∞–µ–º .env (–µ—Å–ª–∏ –µ—Å—Ç—å)
Import-DotEnv

# –î–µ—Ñ–æ–ª—Ç—ã –æ–∫—Ä—É–∂–µ–Ω–∏—è
if (-not $env:CATALOG_PATH) {
    $env:CATALOG_PATH = "assets\fixed_catalog.yaml"
}
$env:PYTHONIOENCODING = "utf-8"
$env:PYTHONPATH = "."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞
if (-not $env:BOT_TOKEN) {
    Write-Host "‚ùå BOT_TOKEN –Ω–µ –∑–∞–¥–∞–Ω. –£–∫–∞–∂–∏ –≤ .env –∏–ª–∏ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º: $env:BOT_TOKEN=..." -ForegroundColor Red
    exit 1
}

# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
Write-Host "üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ polling..." -ForegroundColor Green
Write-Host "üêç Python: $pythonPath" -ForegroundColor Cyan
Write-Host "üìÅ –ö–∞—Ç–∞–ª–æ–≥: $(Get-Location)" -ForegroundColor Cyan

try {
    & $pythonPath -m bot.main
} catch {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: $_" -ForegroundColor Red
    Write-Host "üí° –ü—Ä–æ–≤–µ—Ä—å: .venv –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω, –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã, BOT_TOKEN –≤ .env" -ForegroundColor Yellow
}

Write-Host "üëã –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω." -ForegroundColor Green


