#!/usr/bin/env python3
"""–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π"""

import sys
import os

sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

def test_config():
    """–¢–µ—Å—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    print("üîß –¢–µ—Å—Ç–∏—Ä—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é...")
    try:
        from config.env import get_settings
        settings = get_settings()
        print(f"‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞: {settings.bot_token[:10]}...")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        return False

def test_cart():
    """–¢–µ—Å—Ç –∫–æ—Ä–∑–∏–Ω—ã"""
    print("\nüõí –¢–µ—Å—Ç–∏—Ä—É—é –∫–æ—Ä–∑–∏–Ω—É...")
    try:
        from services.cart_store import CartStore, CartItem
        cart = CartStore()

        # –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è CartItem —Å price_currency
        item = CartItem(
            product_id="test123",
            name="Test Product",
            price=100.0,
            price_currency="RUB"
        )
        print("‚úÖ CartItem —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        print(f"   - ID: {item.product_id}")
        print(f"   - –¶–µ–Ω–∞: {item.price} {item.price_currency}")

        # –¢–µ—Å—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ—Ä–∑–∏–Ω—É
        cart.add_item("user123", item.product_id, item.variant_id, name=item.name, price=item.price)
        count = cart.get_cart_count("user123")
        if count == 1:
            print("‚úÖ –¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥—Å—á–µ—Ç–∞: {count}")
            return False

        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã: {e}")
        import traceback
        traceback.print_exc()
        return False

def test_imports():
    """–¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–æ–≤"""
    print("\nüì¶ –¢–µ—Å—Ç–∏—Ä—É—é –∏–º–ø–æ—Ä—Ç—ã...")
    try:
        from engine.selector_schema import SKINCARE_CANONICAL_SLUGS, canon_slug
        print("‚úÖ selector_schema –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")

        from bot.main import main
        print("‚úÖ bot.main –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")

        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤: {e}")
        return False

def main():
    print("üöÄ –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π")
    print("=" * 40)

    tests = [
        ("–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è", test_config),
        ("–ò–º–ø–æ—Ä—Ç—ã", test_imports),
        ("–ö–æ—Ä–∑–∏–Ω–∞", test_cart),
    ]

    results = []
    for name, test_func in tests:
        try:
            result = test_func()
            results.append((name, result))
        except Exception as e:
            print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ {name}: {e}")
            results.append((name, False))

    print("\n" + "=" * 40)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´:")

    all_passed = True
    for name, result in results:
        status = "‚úÖ –ü–†–û–ô–î–ï–ù" if result else "‚ùå –ü–†–û–í–ê–õ–ï–ù"
        print(f"  {name}: {status}")
        if not result:
            all_passed = False

    if all_passed:
        print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´! –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
    else:
        print("\n‚ö†Ô∏è  –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã, —Ç—Ä–µ–±—É—é—â–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è!")

    return all_passed

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
