"""
–¢–µ—Å—Ç—ã —É–ª—É—á—à–µ–Ω–Ω–æ–π –∫–æ—Ä–∑–∏–Ω—ã —Å –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç–æ–≤–∞—Ä–∞—Ö
"""

import pytest
from datetime import datetime
from engine.cart_store import CartStore, CartItem


def test_cart_item_extended_fields():
    """–¢–µ—Å—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã—Ö –ø–æ–ª–µ–π CartItem"""
    cart_item = CartItem(
        product_id="test_123",
        qty=2,
        brand="Test Brand",
        name="Test Product",
        price=1500.0,
        price_currency="‚ÇΩ",
        ref_link="https://example.com/product",
        explain="–ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –≤–∞—à–µ–≥–æ —Ü–≤–µ—Ç–æ—Ç–∏–ø–∞",
        category="foundation",
        in_stock=True,
        added_at=datetime.now().isoformat()
    )
    
    assert cart_item.product_id == "test_123"
    assert cart_item.qty == 2
    assert cart_item.brand == "Test Brand"
    assert cart_item.name == "Test Product"
    assert cart_item.price == 1500.0
    assert cart_item.price_currency == "‚ÇΩ"
    assert cart_item.ref_link == "https://example.com/product"
    assert cart_item.explain == "–ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –≤–∞—à–µ–≥–æ —Ü–≤–µ—Ç–æ—Ç–∏–ø–∞"
    assert cart_item.category == "foundation"
    assert cart_item.in_stock is True
    assert cart_item.added_at is not None


def test_cart_store_enhanced_functionality():
    """–¢–µ—Å—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ CartStore"""
    store = CartStore(base_dir="test_carts")
    user_id = 12345
    
    # –û—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É –ø–µ—Ä–µ–¥ —Ç–µ—Å—Ç–æ–º
    store.clear(user_id)
    
    # –°–æ–∑–¥–∞–µ–º –ø–æ–ª–Ω—ã–π CartItem
    cart_item = CartItem(
        product_id="prod_456",
        qty=1,
        brand="Beautiful Brand",
        name="Amazing Foundation",
        price=2200.0,
        price_currency="‚ÇΩ",
        ref_link="https://shop.example.com/prod_456?aff=S1",
        explain="–ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Ç–µ–ø–ª–æ–≥–æ –ø–æ–¥—Ç–æ–Ω–∞",
        category="foundation",
        in_stock=True,
        added_at=datetime.now().isoformat()
    )
    
    # –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ—Ä–∑–∏–Ω—É
    store.add(user_id, cart_item)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ç–æ–≤–∞—Ä –¥–æ–±–∞–≤–∏–ª—Å—è
    items = store.get(user_id)
    assert len(items) == 1
    
    saved_item = items[0]
    assert saved_item.product_id == "prod_456"
    assert saved_item.brand == "Beautiful Brand"
    assert saved_item.name == "Amazing Foundation"
    assert saved_item.price == 2200.0
    assert saved_item.ref_link == "https://shop.example.com/prod_456?aff=S1"
    assert saved_item.explain == "–ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Ç–µ–ø–ª–æ–≥–æ –ø–æ–¥—Ç–æ–Ω–∞"
    assert saved_item.category == "foundation"
    assert saved_item.in_stock is True
    
    # –¢–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
    store.set_qty(user_id, "prod_456", 3)
    items = store.get(user_id)
    assert items[0].qty == 3
    
    # –¢–µ—Å—Ç —É–¥–∞–ª–µ–Ω–∏—è
    store.remove(user_id, "prod_456")
    items = store.get(user_id)
    assert len(items) == 0
    
    # –û—á–∏—â–∞–µ–º –ø–æ—Å–ª–µ —Ç–µ—Å—Ç–∞
    store.clear(user_id)


def test_cart_multiple_products():
    """–¢–µ—Å—Ç –∫–æ—Ä–∑–∏–Ω—ã —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ —Ç–æ–≤–∞—Ä–∞–º–∏"""
    store = CartStore(base_dir="test_carts")
    user_id = 54321
    
    store.clear(user_id)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–æ–≤–∞—Ä–æ–≤
    products = [
        CartItem(
            product_id="foundation_001",
            qty=1,
            brand="Brand A",
            name="Foundation Light",
            price=1800.0,
            category="foundation",
            in_stock=True,
            explain="–°–≤–µ—Ç–ª—ã–π —Ç–æ–Ω –¥–ª—è —Ö–æ–ª–æ–¥–Ω–æ–≥–æ –ø–æ–¥—Ç–æ–Ω–∞"
        ),
        CartItem(
            product_id="lipstick_002", 
            qty=2,
            brand="Brand B",
            name="Red Lipstick",
            price=1200.0,
            category="lipstick",
            in_stock=False,  # –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω
            explain="–Ø—Ä–∫–∏–π –∫—Ä–∞—Å–Ω—ã–π –¥–ª—è –∫–æ–Ω—Ç—Ä–∞—Å—Ç–Ω–æ–≥–æ —Ç–∏–ø–∞"
        ),
        CartItem(
            product_id="mascara_003",
            qty=1,
            brand="Brand C", 
            name="Volume Mascara",
            price=950.0,
            category="mascara",
            in_stock=True,
            explain="–î–æ–±–∞–≤–ª—è–µ—Ç –æ–±—ä–µ–º —Ä–µ—Å–Ω–∏—Ü–∞–º"
        )
    ]
    
    for product in products:
        store.add(user_id, product)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –¥–æ–±–∞–≤–∏–ª–∏—Å—å
    items = store.get(user_id)
    assert len(items) == 3
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–≤–∞—Ä—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    foundations = [item for item in items if item.category == "foundation"]
    lipsticks = [item for item in items if item.category == "lipstick"]
    mascaras = [item for item in items if item.category == "mascara"]
    
    assert len(foundations) == 1
    assert len(lipsticks) == 1
    assert len(mascaras) == 1
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å
    available_items = [item for item in items if item.in_stock]
    unavailable_items = [item for item in items if not item.in_stock]
    
    assert len(available_items) == 2
    assert len(unavailable_items) == 1
    assert unavailable_items[0].product_id == "lipstick_002"
    
    # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤
    total_price = sum(item.price * item.qty for item in available_items)
    assert total_price == 1800.0 + 950.0  # foundation + mascara
    
    store.clear(user_id)


def test_cart_affiliate_links():
    """–¢–µ—Å—Ç –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∏—Ö —Å—Å—ã–ª–æ–∫ –≤ –∫–æ—Ä–∑–∏–Ω–µ"""
    store = CartStore(base_dir="test_carts")
    user_id = 99999
    
    store.clear(user_id)
    
    cart_item = CartItem(
        product_id="test_affiliate",
        qty=1,
        brand="Test Brand",
        name="Test Product",
        price=1000.0,
        ref_link="https://goldapple.ru/product/123?aff=S1&utm_source=skinbot",
        in_stock=True
    )
    
    store.add(user_id, cart_item)
    items = store.get(user_id)
    
    assert len(items) == 1
    ref_link = items[0].ref_link
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∞—è —Å—Å—ã–ª–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω—É–∂–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    assert "aff=S1" in ref_link
    assert "goldapple.ru" in ref_link
    
    store.clear(user_id)


if __name__ == "__main__":
    print("üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —É–ª—É—á—à–µ–Ω–Ω–æ–π –∫–æ—Ä–∑–∏–Ω—ã...")
    
    test_cart_item_extended_fields()
    print("‚úÖ test_cart_item_extended_fields - PASSED")
    
    test_cart_store_enhanced_functionality()
    print("‚úÖ test_cart_store_enhanced_functionality - PASSED")
    
    test_cart_multiple_products()
    print("‚úÖ test_cart_multiple_products - PASSED")
    
    test_cart_affiliate_links()
    print("‚úÖ test_cart_affiliate_links - PASSED")
    
    print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∫–æ—Ä–∑–∏–Ω—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")

