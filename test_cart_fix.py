#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –∫–æ—Ä–∑–∏–Ω—ã
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

def test_cart_store():
    """–¢–µ—Å—Ç CartStore"""
    print("üõí –¢–µ—Å—Ç–∏—Ä—É—é CartStore...")

    try:
        from services.cart_store import CartStore, get_cart_store
        cart_store = get_cart_store()

        # –¢–µ—Å—Ç 1: get_cart –≤–º–µ—Å—Ç–æ get
        user_id = 810311491
        cart_items = cart_store.get_cart(user_id)
        print(f"‚úÖ get_cart —Ä–∞–±–æ—Ç–∞–µ—Ç: {len(cart_items)} —Ç–æ–≤–∞—Ä–æ–≤")

        # –¢–µ—Å—Ç 2: add_item
        cart_store.add_item(user_id, "test_product", name="Test Product", price=100.0)
        cart_items = cart_store.get_cart(user_id)
        print(f"‚úÖ add_item —Ä–∞–±–æ—Ç–∞–µ—Ç: {len(cart_items)} —Ç–æ–≤–∞—Ä–æ–≤")

        # –¢–µ—Å—Ç 3: get_cart_count
        count = cart_store.get_cart_count(user_id)
        print(f"‚úÖ get_cart_count —Ä–∞–±–æ—Ç–∞–µ—Ç: {count} —Ç–æ–≤–∞—Ä–æ–≤")

        # –¢–µ—Å—Ç 4: clear_cart
        cart_store.clear_cart(user_id)
        cart_items = cart_store.get_cart(user_id)
        print(f"‚úÖ clear_cart —Ä–∞–±–æ—Ç–∞–µ—Ç: {len(cart_items)} —Ç–æ–≤–∞—Ä–æ–≤")

        return True

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ CartStore: {e}")
        import traceback
        traceback.print_exc()
        return False

def test_catalog_store():
    """–¢–µ—Å—Ç CatalogStore"""
    print("\nüìö –¢–µ—Å—Ç–∏—Ä—É—é CatalogStore...")

    try:
        from engine.catalog_store import CatalogStore
        catalog_store = CatalogStore.instance("assets/fixed_catalog.yaml")
        catalog = catalog_store.get()

        if catalog:
            print(f"‚úÖ CatalogStore —Ä–∞–±–æ—Ç–∞–µ—Ç: {len(catalog)} —Ç–æ–≤–∞—Ä–æ–≤")
            return True
        else:
            print("‚ùå CatalogStore –≤–µ—Ä–Ω—É–ª None")
            return False

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ CatalogStore: {e}")
        import traceback
        traceback.print_exc()
        return False

def main():
    print("üîß –¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –∫–æ—Ä–∑–∏–Ω—ã")
    print("=" * 40)

    tests = [
        ("CartStore", test_cart_store),
        ("CatalogStore", test_catalog_store),
    ]

    results = []
    for name, test_func in tests:
        try:
            result = test_func()
            results.append((name, result))
        except Exception as e:
            print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ {name}: {e}")
            results.append((name, False))

    print("\n" + "=" * 40)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´:")

    all_passed = True
    for name, result in results:
        status = "‚úÖ –ü–†–û–ô–î–ï–ù" if result else "‚ùå –ü–†–û–í–ê–õ–ï–ù"
        print(f"  {name}: {status}")
        if not result:
            all_passed = False

    if all_passed:
        print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´! –ö–æ—Ä–∑–∏–Ω–∞ –¥–æ–ª–∂–Ω–∞ —Ä–∞–±–æ—Ç–∞—Ç—å!")
    else:
        print("\n‚ö†Ô∏è  –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã, —Ç—Ä–µ–±—É—é—â–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è!")

    return all_passed

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
