#!/usr/bin/env python3
"""
–ü—Ä—è–º–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ Git –∫–æ–º–∞–Ω–¥ —á–µ—Ä–µ–∑ subprocess –±–µ–∑ –æ–±–æ–ª–æ—á–∫–∏
"""

import subprocess
import sys
import os
from pathlib import Path

def run_git_command(args, description):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç git –∫–æ–º–∞–Ω–¥—É —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏"""
    env = os.environ.copy()
    env.update({
        'PAGER': 'cat',
        'GIT_PAGER': 'cat',
        'LESS': '',
        'LV': ''
    })

    print(f"\nüîß {description}:")

    try:
        # –í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—É
        result = subprocess.run(
            ['git'] + args,
            cwd=os.getcwd(),
            env=env,
            capture_output=True,
            text=True,
            timeout=30  # –¢–∞–π–º–∞—É—Ç 30 —Å–µ–∫—É–Ω–¥
        )

        # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        if result.stdout:
            print(result.stdout)

        if result.stderr:
            print(f"–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è: {result.stderr}")

        return result.returncode == 0

    except subprocess.TimeoutExpired:
        print(f"‚ùå –¢–∞–π–º–∞—É—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã: {' '.join(['git'] + args)}")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {e}")
        return False

def main():
    print("üöÄ –ü—Ä—è–º–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ Git –∫–æ–º–∞–Ω–¥")
    print("=" * 50)

    # –ú–µ–Ω—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –Ω–∞ –ø—Ä–æ–µ–∫—Ç
    project_dir = Path(__file__).parent
    os.chdir(project_dir)

    # –í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—ã
    commands = [
        (['--no-pager', 'status', '--porcelain'], "Git —Å—Ç–∞—Ç—É—Å"),
        (['--no-pager', 'diff', '--name-only'], "–ò–∑–º–µ–Ω–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã"),
        (['--no-pager', 'diff', '--stat'], "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π"),
        (['--no-pager', 'log', '--oneline', '-3'], "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –∫–æ–º–º–∏—Ç—ã"),
    ]

    success_count = 0
    for args, desc in commands:
        if run_git_command(args, desc):
            success_count += 1
        else:
            print(f"‚ö†Ô∏è  –ö–æ–º–∞–Ω–¥–∞ '{desc}' –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π")

    print("\n" + "=" * 50)
    print(f"‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ: {success_count}/{len(commands)} –∫–æ–º–∞–Ω–¥")

    if success_count == len(commands):
        print("üéâ –í—Å–µ –∫–æ–º–∞–Ω–¥—ã –≤—ã–ø–æ–ª–Ω–µ–Ω—ã –±–µ–∑ –∑–∞–≤–∏—Å–∞–Ω–∏—è!")

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ç–æ–≥–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        print("\nüìã –ò–¢–û–ì–û–í–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø:")
        print("‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ")

        # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
        try:
            result = subprocess.run(
                ['git', '--no-pager', 'diff', '--name-only'],
                cwd=os.getcwd(),
                env={**os.environ, 'PAGER': 'cat', 'GIT_PAGER': 'cat'},
                capture_output=True,
                text=True
            )
            if result.stdout:
                files = result.stdout.strip().split('\n')
                print(f"üìù –ò–∑–º–µ–Ω–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {len(files)}")
                for file in files:
                    if file.strip():
                        print(f"   ‚Ä¢ {file}")
            else:
                print("üìù –ò–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤: 0")
        except:
            pass

        print("\n‚úÖ –ü–†–û–ë–õ–ï–ú–ê –° –ü–ï–ô–î–ñ–ï–†–û–ú –†–ï–®–ï–ù–ê!")
        print("–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–±—ã—á–Ω—ã–µ git –∫–æ–º–∞–Ω–¥—ã!")

    else:
        print("‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—å —Å –æ—à–∏–±–∫–∞–º–∏")

    return success_count == len(commands)

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
