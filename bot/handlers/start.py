from __future__ import annotations

from aiogram import Router, F
from aiogram.filters import CommandStart, StateFilter
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton
from aiogram.fsm.context import FSMContext


router = Router()


BTN_PALETTE = "–ü–∞–ª–∏—Ç—Ä–æ–º–µ—Ç—Ä ‚Äî –º–æ–π –∏–¥–µ–∞–ª—å–Ω—ã–π —Ü–≤–µ—Ç"
BTN_SKINCARE = "–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∫–æ–∂–∏ PRO"
BTN_ABOUT = "‚ìò –û –±–æ—Ç–µ"
BTN_PICK = "üõí –ú–æ—è –ø–æ–¥–±–æ—Ä–∫–∞"
BTN_SETTINGS = "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏"


def build_main_menu() -> ReplyKeyboardMarkup:
    return ReplyKeyboardMarkup(
        keyboard=
        [
            [KeyboardButton(text=BTN_PALETTE)],
            [KeyboardButton(text=BTN_SKINCARE)],
            [KeyboardButton(text=BTN_ABOUT), KeyboardButton(text=BTN_PICK), KeyboardButton(text=BTN_SETTINGS)],
        ],
        resize_keyboard=True,
        input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ‚Ä¶",
    )


@router.message(CommandStart())
async def on_start(m: Message, state: FSMContext) -> None:
    await state.clear()
    await m.answer(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–¥–±–µ—Ä—É —É—Ö–æ–¥ –∏ –∏–¥–µ–∞–ª—å–Ω—ã–µ –æ—Ç—Ç–µ–Ω–∫–∏. –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º:",
        reply_markup=build_main_menu(),
    )


@router.message(F.text == BTN_SKINCARE, StateFilter(None))
async def start_skincare(m: Message, state: FSMContext) -> None:
    from .flow_skincare import start_flow

    await start_flow(m, state)


@router.message(F.text == BTN_PALETTE, StateFilter(None))
async def start_palette(m: Message, state: FSMContext) -> None:
    from .flow_palette import start_flow

    await start_flow(m, state)


@router.message(F.text == BTN_ABOUT, StateFilter(None))
async def about(m: Message, state: FSMContext) -> None:
    await state.clear()
    await m.answer(
        "–û –±–æ—Ç–µ: –ø–æ–¥–±–æ—Ä —É—Ö–æ–¥–∞ –∏ –º–∞–∫–∏—è–∂–∞ –ø–æ –ø—Ä–æ—Ñ–∏–ª—é. –ü—Ä–æ–π–¥–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø–æ—Ç–æ–∫–æ–≤ –∏ –ø–æ–ª—É—á–∏—Ç–µ –æ—Ç—á—ë—Ç —Å —Å—Å—ã–ª–∫–∞–º–∏.",
        reply_markup=build_main_menu(),
    )


