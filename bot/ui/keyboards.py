from __future__ import annotations

from aiogram.types import (
    ReplyKeyboardMarkup,
    KeyboardButton,
    InlineKeyboardMarkup,
    InlineKeyboardButton,
)
from typing import List


# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è –∫–Ω–æ–ø–æ–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
BTN_PALETTE = "üé® –ü–∞–ª–∏—Ç–æ–º–µp ‚Äî –º–æ–π –∏–¥–µ–∞–ª—å–Ω—ã–π —Ü–≤–µ—Ç"
BTN_SKINCARE = "‚ú® –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∫–æ–∂–∏ PRO"
BTN_ABOUT = "‚ìò –û –±–æ—Ç–µ"
BTN_PICK = "üõí –ú–æ—è –ø–æ–¥–±–æ—Ä–∫–∞"
BTN_SETTINGS = "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏"
BTN_REPORT = "üìÑ –û—Ç—á—ë—Ç"
BTN_BACK = "‚¨ÖÔ∏è –ù–∞–∑–∞–¥"


def main_menu() -> ReplyKeyboardMarkup:
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞"""
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text=BTN_PALETTE)],
            [KeyboardButton(text=BTN_SKINCARE)],
            [KeyboardButton(text=BTN_ABOUT), KeyboardButton(text=BTN_PICK)],
            [KeyboardButton(text=BTN_REPORT), KeyboardButton(text=BTN_SETTINGS)],
        ],
        resize_keyboard=True,
        input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ‚Ä¶",
    )


def back_button() -> ReplyKeyboardMarkup:
    """–ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞"""
    return ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text=BTN_BACK)]],
        resize_keyboard=True,
    )


def confirm_buttons(yes_text: str = "‚úÖ –î–∞", no_text: str = "‚ùå –ù–µ—Ç") -> InlineKeyboardMarkup:
    """–ö–Ω–æ–ø–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è"""
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text=yes_text, callback_data="confirm:yes")],
            [InlineKeyboardButton(text=no_text, callback_data="confirm:no")],
        ]
    )


def navigation_buttons(
    prev_callback: str = None, next_callback: str = None, back_callback: str = None
) -> InlineKeyboardMarkup:
    """–ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏"""
    buttons: List[List[InlineKeyboardButton]] = []
    row: List[InlineKeyboardButton] = []

    if back_callback:
        row.append(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=back_callback))

    if prev_callback:
        row.append(InlineKeyboardButton(text="‚óÄÔ∏è –ü—Ä–µ–¥—ã–¥—É—â–∏–π", callback_data=prev_callback))

    if next_callback:
        row.append(InlineKeyboardButton(text="–°–ª–µ–¥—É—é—â–∏–π ‚ñ∂Ô∏è", callback_data=next_callback))

    if row:
        buttons.append(row)

    return InlineKeyboardMarkup(inline_keyboard=buttons) if buttons else None


def loading_message() -> str:
    """–°–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ"""
    return "‚è≥ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –≤–∞—à –∑–∞–ø—Ä–æ—Å..."


def error_message() -> str:
    """–°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ"""
    return "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
